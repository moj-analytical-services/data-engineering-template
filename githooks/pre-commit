#!/bin/sh
#
# comment out a section to turn that check off
# commit without checks by adding --no-verify to your commit command

# run Black and flake8 on all .py files in the repo
printf "\n\e[1mRunning Black Python code formatter\e[0m\n"
hash black .
printf "\n\e[1mRunning flake8 Python linter\e[0m\n"
hash flake8 .
printf "\n\e[1mRunning yamllint .yaml linter\e[0m\n"
hash yamllint .

printf "\n\e[1mRunning git-crypt status and checking for warnings\e[0m\n"
# git-crypt check for unencrypted file warnings adapted from https://www.gitmemory.com/issue/AGWA/git-crypt/45/614607121
if [ -d ".git-crypt" ]; then
    hash git-crypt status | grep "\*\*\* WARNING"; test $? -eq 1
fi
printf "git-crypt fine\n\n"

exec < /dev/tty
while read -p "Continue with commit? (Y/n) " yn; do
    case $yn in
        [Yy] ) printf "Continuing with commit\n"; break;;
        [Nn] ) printf "Cancelling commit\n"; exit 1;;
        * ) echo "Please answer y (yes) or n (no):" && continue;
    esac
done
